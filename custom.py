from telegraph import upload_file
from telethon.tl.functions.users import GetFullUserRequest
from urlextract import URLExtract
from validators.url import url

from userbot import BOTLOG_CHATID, catub
from userbot.core.logger import logging

from ..Config import Config
from ..core.managers import edit_delete, edit_or_reply
from ..sql_helper.globals import addgvar, delgvar, gvarstatus

plugin_category = "tools"
LOGS = logging.getLogger(__name__)
cmdhd = Config.COMMAND_HAND_LER

extractor = URLExtract()
vlist = [
    "ALIVE_PIC",
    "ALIVE_EMOJI",
    "ALIVE_TEMPLATE",
    "ALIVE_TEXT",
    "ALLOW_NSFW",
    "CHANGE_TIME",
    "DEFAULT_BIO",
    "DEFAULT_NAME",
    "DEFAULT_PIC",
    "DEFAULT_USER",
    "DIGITAL_PIC",
    "FIRST_NAME",
    "HELP_EMOJI",
    "HELP_TEXT",
    "IALIVE_PIC",
    "LAST_NAME",
    "PING_PIC",
    "PING_TEMPLATE",
    "PM_PIC",
    "PM_TEXT",
    "PM_BLOCK",
    "MAX_FLOOD_IN_PMS",
    "START_TEXT",
    "BOT_START_PIC",
    "NO_OF_ROWS_IN_HELP",
    "NO_OF_COLUMNS_IN_HELP",
    "CUSTOM_STICKER_PACKNAME",
]

oldvars = {
    "PM_PIC": "pmpermit_pic",
    "PM_TEXT": "pmpermit_txt",
    "PM_BLOCK": "pmblock",
}


@catub.cat_cmd(
    pattern="(set|get|del)dv(?: |$)([\s\S]*)",
    command=("dv", plugin_category),
    info={
        "header": "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å",
        "description": "–£—Å—Ç–∞–Ω–æ–≤–∫–∞, –≤—ã–±–æ—Ä–∫–∞ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≥–µ—Ä–æ–∫—É.\n\n–í—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞—Ä—Ç–∏–Ω–æ–∫, —É–∫–∞–∑–∞–≤ –ø—Ä–æ–±–µ–ª –ø–æ—Å–ª–µ —Å—Å—ã–ª–æ–∫ –≤ live, ialive, pm..",
        "flags": {
            "set": "–ß—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ä—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é",
            "get": "–ß—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ var.",
            "del": "–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ",
        },
        "var name": "**[–°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö]**(https://catuserbot.gitbook.io/catuserbot/data-vars-setup)",
        "usage": [
            "{tr}setdv <var name> <var value>",
            "{tr}getdv <var name>",
            "{tr}deldv <var name>",
        ],
        "examples": [
            "{tr}setdv ALIVE_PIC <pic link>",
            "{tr}setdv ALIVE_PIC <pic link 1> <pic link 2>",
            "{tr}getdv ALIVE_PIC",
            "{tr}deldv ALIVE_PIC",
        ],
    },
)
async def bad(event):  # sourcery no-metrics
    "To manage vars in database"
    cmd = event.pattern_match.group(1).lower()
    vname = event.pattern_match.group(2)
    vnlist = "".join(f"{i}. `{each}`\n" for i, each in enumerate(vlist, start=1))
    if not vname:
        return await edit_delete(
            event, f"**üìë –î–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è var –∏–∑ —Å–ø–∏—Å–∫–∞ :\n\n**{vnlist}", time=60
        )
    vinfo = None
    if " " in vname:
        vname, vinfo = vname.split(" ", 1)
    reply = await event.get_reply_message()
    if not vinfo and reply:
        vinfo = reply.text
    if vname in vlist:
        if vname in oldvars:
            vname = oldvars[vname]
        if cmd == "set":
            if vname == "DEFAULT_USER":
                if not vinfo or vinfo != "Me":
                    return await edit_delete(
                        event,
                        "**–ß—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ:**\\n `.setdv DEFAULT_USER Me`",
                    )

                USERINFO = await catub.get_entity(catub.uid)
                FULL_USERINFO = (await catub(GetFullUserRequest(catub.uid))).full_user
                addgvar("FIRST_NAME", USERINFO.first_name)
                addgvar("DEFAULT_NAME", USERINFO.first_name)
                if USERINFO.last_name:
                    addgvar(
                        "DEFAULT_NAME",
                        f"{USERINFO.first_name}  {USERINFO.first_name}",
                    )
                    addgvar("LAST_NAME", USERINFO.last_name)
                elif gvarstatus("LAST_NAME"):
                    delgvar("LAST_NAME")
                if FULL_USERINFO.about:
                    addgvar("DEFAULT_BIO", FULL_USERINFO.about)
                elif gvarstatus("DEFAULT_BIO"):
                    delgvar("DEFAULT_BIO")
                try:
                    photos = await catub.get_profile_photos(catub.uid)
                    myphoto = await catub.download_media(photos[0])
                    myphoto_urls = upload_file(myphoto)
                    addgvar("DEFAULT_PIC", f"https://telegra.ph{myphoto_urls[0]}")
                except IndexError:
                    if gvarstatus("DEFAULT_PIC"):
                        delgvar("DEFAULT_PIC")
                usrln = gvarstatus("LAST_NAME") or None
                usrbio = gvarstatus("DEFAULT_BIO") or None
                usrphoto = gvarstatus("DEFAULT_PIC") or None
                vinfo = f'**–ù–∏–∫–Ω–µ–π–º:** `{gvarstatus("DEFAULT_NAME")}`\n**–ò–º—è:** `{gvarstatus("FIRST_NAME")}`\n**–§–∞–º–∏–ª–∏—è:** `{usrln}`\n**–ë–∏–æ:** `{usrbio}`\n**–§–æ—Ç–æ:** `{usrphoto}`'
            else:
                if not vinfo and vname in ["ALIVE_TEMPLATE", "PING_TEMPLATE"]:
                    return await edit_delete(event, "Check @cat_alive")
                if not vinfo:
                    return await edit_delete(
                        event,
                        f"–î–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–ª—è **{vname}**",
                    )
                check = vinfo.split(" ")
                for i in check:
                    if vname == "DEFAULT_PIC" and not url(i):
                        return await edit_delete(event, "**–î–∞–π –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É...**")
                    elif vname == "DIGITAL_PIC" and not url(i):
                        return await edit_delete(event, "**–î–∞–π –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É...**")
                    elif (("PIC" in vname) or ("pic" in vname)) and not url(i):
                        return await edit_delete(event, "**–î–∞–π –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É...**")
                    elif (
                        vname == "DIGITAL_PIC"
                        or vname == "DEFAULT_PIC"
                        or vname == "BOT_START_PIC"
                    ) and url(i):
                        vinfo = i
                        break
                    elif not "PIC" in vname:
                        break
                if vname == "DEFAULT_BIO" and len(vinfo) > 70:
                    return await edit_or_reply(
                        event,
                        f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –≤–∞—à–µ–π –±–∏–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 70, –ø–æ—ç—Ç–æ–º—É —Å–æ–∂–º–∏—Ç–µ –µ–≥–æ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–Ω–æ–≤–∞.\n`{vinfo}`",
                    )
                addgvar(vname, vinfo)
            if BOTLOG_CHATID:
                await event.client.send_message(
                    BOTLOG_CHATID,
                    f"#SET_DATAVAR\
                    \n**{vname}** –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –Ω–æ–≤—ã–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∏–∂–µ",
                )
                await event.client.send_message(BOTLOG_CHATID, vinfo, silent=True)
            await edit_delete(
                event, f"üìë –¶–µ–Ω–Ω–æ—Å—Ç—å **{vname}** –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ :- `{vinfo}`", time=20
            )
        if cmd == "get":
            var_data = gvarstatus(vname)
            await edit_delete(
                event, f"üìë –¶–µ–Ω–Ω–æ—Å—Ç—å **{vname}** —ç—Ç–æ  ```{var_data}```", time=20
            )
        elif cmd == "del":
            if vname == "DEFAULT_USER":
                delgvar("FIRST_NAME")
                delgvar("DEFAULT_NAME")
                if gvarstatus("LAST_NAME"):
                    delgvar("LAST_NAME")
                if gvarstatus("DEFAULT_BIO"):
                    delgvar("DEFAULT_BIO")
                if gvarstatus("DEFAULT_PIC"):
                    delgvar("DEFAULT_PIC")
            delgvar(vname)
            if BOTLOG_CHATID:
                await event.client.send_message(
                    BOTLOG_CHATID,
                    f"#DEL_DATAVAR\
                    \n**{vname}** —É–¥–∞–ª—è–µ—Ç—Å—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
                )
            await edit_delete(
                event,
                f"üìë –¶–µ–Ω–Ω–æ—Å—Ç—å **{vname}** —Ç–µ–ø–µ—Ä—å —É–¥–∞–ª–µ–Ω –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.",
                time=20,
            )
    else:
        await edit_delete(
            event, f"**üìë –î–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è var –∏–∑ —Å–ø–∏—Å–∫–∞ :\n\n**{vnlist}", time=60
        )


@catub.cat_cmd(
    pattern="custom (pmpermit|pmpic|pmblock|startmsg)$",
    command=("custom", plugin_category),
    info={
        "header": "–ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ–µ–≥–æ Userbot.",
        "options": {
            "pmpermit": "–ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–µ–∫—Å—Ç pmpermit. ",
            "pmblock": "–ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ pmpermit.",
            "startmsg": "–ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞, –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –µ–≥–æ –∑–∞–ø—É—Å—Ç–∏–ª.",
            "pmpic": "–ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å pmpermit pic. –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ URL-–∞–¥—Ä–µ—Å –º–µ–¥–∏–∞ –∏–ª–∏ —Ç–µ–∫—Å—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –º–µ–¥–∏–∞.",
        },
        "custom": {
            "{mention}": "–£–ø–æ–º—è–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            "{first}": "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            "{last}": "–§–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            "{fullname}": "–ü–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            "{username}": "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            "{userid}": "Userid –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            "{my_first}": "–¢–≤–æ–µ –∏–º—è",
            "{my_last}": "–¢–≤–æ—è —Ñ–∞–º–∏–ª–∏—è ",
            "{my_fullname}": "–í–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è",
            "{my_username}": "–í–∞—à –ª–æ–≥–∏–Ω",
            "{my_mention}": "–í–∞—à–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ",
            "{totalwarns}": "–í—Å–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π",
            "{warns}": "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è",
            "{remwarns}": "–û—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è",
        },
        "usage": [
            "{tr}custom <option> reply",
        ],
        "NOTE": "–í—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, –ø–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∏—Ö, `{tr}setdv` , `{tr}getdv` & `{tr}deldv` —Ç–∞–∫–∂–µ.",
    },
)
async def custom_catuserbot(event):
    "To customize your CatUserbot."
    reply = await event.get_reply_message()
    text = None
    if reply:
        text = reply.text
    if text is None:
        return await edit_delete(event, "–û—Ç–≤–µ—Ç –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç–µ–∫—Å—Ç –∏–ª–∏ URL")
    input_str = event.pattern_match.group(1)
    if input_str == "pmpermit":
        addgvar("pmpermit_txt", text)
    if input_str == "pmblock":
        addgvar("pmblock", text)
    if input_str == "startmsg":
        addgvar("START_TEXT", text)
    if input_str == "pmpic":
        urls = extractor.find_urls(reply.text)
        if not urls:
            return await edit_delete(event, "`–¥–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è`", 5)
        text = " ".join(urls)
        addgvar("pmpermit_pic", text)
    await edit_or_reply(event, f"__–í–∞—à –∫–∞—Å—Ç–æ–º {input_str} –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω")
    if BOTLOG_CHATID:
        await event.client.send_message(
            BOTLOG_CHATID,
            f"#SET_DATAVAR\
                    \n**{input_str}** –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –Ω–æ–≤—ã–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∏–∂–µ",
        )
        await event.client.send_message(BOTLOG_CHATID, text, silent=True)


@catub.cat_cmd(
    pattern="delcustom (pmpermit|pmpic|pmblock|startmsg)$",
    command=("delcustom", plugin_category),
    info={
        "header": "–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –≤–∞—à–µ–≥–æ Userbot.",
        "options": {
            "pmpermit": "–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç–µ–∫—Å—Ç pmpermit",
            "pmblock": "–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π",
            "pmpic": "–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è.",
            "startmsg": "–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞, –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –µ–≥–æ –∑–∞–ø—É—Å—Ç–∏–ª.",
        },
        "usage": [
            "{tr}delcustom <option>",
        ],
        "NOTE": "–í—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, –ø–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∏—Ö, `{tr}setdv` , `{tr}getdv` & `{tr}deldv` —Ç–∞–∫–∂–µ.",
    },
)
async def custom_catuserbot(event):
    "To delete costomization of your CatUserbot."
    input_str = event.pattern_match.group(1)
    if input_str == "pmpermit":
        if gvarstatus("pmpermit_txt") is None:
            return await edit_delete(event, "__–í—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ —Å–≤–æ–π pmpermit.__")
        delgvar("pmpermit_txt")
    if input_str == "pmblock":
        if gvarstatus("pmblock") is None:
            return await edit_delete(event, "__–í—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ —Å–≤–æ–π pmblock.__")
        delgvar("pmblock")
    if input_str == "pmpic":
        if gvarstatus("pmpermit_pic") is None:
            return await edit_delete(event, "__–í—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ —Å–≤–æ–π pmpic.__")
        delgvar("pmpermit_pic")
    if input_str == "startmsg":
        if gvarstatus("START_TEXT") is None:
            return await edit_delete(
                event, "__–í—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ —Å–≤–æ–π —Å—Ç–∞—Ä—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–æ—Ç–µ.__"
            )
        delgvar("START_TEXT")
    await edit_or_reply(
        event, f"__—É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª –≤–∞—à—É –Ω–∞—Å—Ç—Ä–æ–π–∫—É {input_str}.__"
    )
    if BOTLOG_CHATID:
        await event.client.send_message(
            BOTLOG_CHATID,
            f"#DEL_DATAVAR\
                    \n**{input_str}** —É–¥–∞–ª—è–µ—Ç—Å—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
        )
